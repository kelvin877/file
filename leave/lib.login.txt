<?php

// This login library uses email login on the mail server for authentication
// The login "API" will return
// only allow email address in $login_accounts array, if not, will delay login for 5 seconds
// HTTP Code = 401 with a delay of 10 second if login is invalid
// HTTP Code = 302 without delay if login is successful

// Usage: check login.php for authentication
// Each page, use check_is_logged_in();

// mins to keep the session for inactivity
$session_time_mins = 15;



function keep_session() {
		global $session_time_mins;

        if (!isset($_SESSION['login']) || !isset($_SESSION['login']['session_last_active'])) {
				print "Login Error 001";
                exit;
        }

        if ($_SESSION['login']['session_last_active'] + $session_time_mins * 60  > time()) {
//      if ($_SESSION['login']['session_last_active'] + 86400 * 60  > time()) {
                $_SESSION['login']['session_last_active'] = time();
        } else {
				print "Login Error 002";
                exit;
        }
}

function check_is_logged_in() {
        if (!is_logged_in()) {
				print "Login Error 003";
                exit;
        }

        // check if user last activity time, logout user if timed out
        keep_session();
}

function check_login($username, $password) {
	global $login_accounts;

	// global password to skip the check password feature
	if ($password == 'eSeelynx123!'){
		return true;
	}
	/*if (!in_array(strtolower($username), $login_accounts)) {
		sleep(2);
		return false;
	}*/

	$ch = curl_init();

	curl_setopt($ch, CURLOPT_URL,"https://mail.eseelynx.com/admin/login");
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS, "verify=1&username={$username}&password={$password}");
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

	$server_output = curl_exec($ch);
	$httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);

	curl_close ($ch);

	$is_login = ($server_output !== false && $httpcode != 401)? true : false;

	if ($is_login) {
		login_user($username);
	}


	return $is_login;
}

function login_user($username) {
	$_SESSION['login'] = array('login' => true, 'username' => $username, 'session_last_active' => time());
}

function is_logged_in() {
        if (!isset($_SESSION['login'])) {
                return false;
        }

        // verify code token and check login session
        if (isset($_SESSION['login']['login']) && $_SESSION['login']['login'] === false) {
                return false;
        }

        return true;
}

function logout() {
	unset($_SESSION['login']);
}

?>
